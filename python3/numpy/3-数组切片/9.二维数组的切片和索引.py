import numpy as np

# 创建一维数组
a = np.arange(1, 13)
print('a=', a)
# 转型为二维数组
a = a.reshape(4, 3)
print('a=\n', a)

"""
1.通过索引访问元素
"""
# 正索引访问 [0, m-1][0, n-1]
print(a[2])  # 获取第3行
print(a[1][2])  # 获取第2行第3列

# 负索引访问 [-m, 1][-n, -1]
print(a[-1])  # 获取最后一行
print(a[-2][-2])  # 获取第3行第2列


"""
2.切片 array[行切片, 列切片]  array [start:stop:step, start:stop:step]
"""
# 1.正向索引操作

# 获取所有行，所有列
print('a1=\n', a[:])
print('a2=\n', a[:, :])

# 获取奇数行，所有列
print('b1=\n', a[::2])
print('b2=\n', a[::2, :])

# 获取偶数行，奇数列
print('c=\n', a[1::2, ::2])

"""使用坐标获取数组array[行, 列] == array[行][列]"""
# (1)同一元素，两种访问方式
print(a[2, 1] == a[2][1])

# (2)同时获取第3行第2列，第4行第1列

# 方法1：先查找元素，再组合为数组
print(np.array([a[2, 1], a[3, 0]]))

# 方法2：
#        X坐标   Y坐标
#      a[  2,      1  ]
#      a[  3,      0  ]
print(a[(2, 3), (1, 0)])


# 2.负向索引操作
print('d=\n', a[::-1])  # 行倒序
print('e=\n', a[:, ::-1])  # 列倒序
print('f=\n', a[::-1, ::-1])  # 行、列倒序
